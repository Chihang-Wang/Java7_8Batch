package day3;

public class day3_homework {
    /*
    Data types:
    byte: byte is a keyword which designates the 8 bits signed integer primitive type.
    short: It has a minimum value of -32,768 and a maximum value of 32,767 (inclusive). 2bytes.
    int: Stores whole numbers from -2,147,483,648 to 2,147,483,647. 4bytes.
    long: Stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807. 8bytes.
    float: Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits. 4bytes.
    double: Stores fractional numbers. Sufficient for storing 15 decimal digits. 8bytes.
    boolean: Stores true or false values. 1bit.
    char: Stores a single character/letter or ASCII values. 2bytes.

    Flow control:
    if: Use if to specify a block of code to be executed, if a specified condition is true.
    else: Use else to specify a block of code to be executed, if the same condition is false.
    switch: Use switch to specify many alternative blocks of code to be executed.
    case: The value of the expression is compared with the values of each case.
    default: The default access modifier is accessible within the package only.
    for: it starts a loop. in form of (for (initial case; end case; what to do after each loop).
    do: The do keyword is used together with while to create a do-while loop.
    while: The while loop loops through a block of code as long as a specified condition is true.
    break: The break keyword is used to break out a for loop, a while loop or a switch block.
    continue: The continue keyword is used to end the current iteration in a for loop (or a while loop), and continues to the next iteration.
    return: The return keyword finished the execution of a method, and can be used to return a value from a method.

    Modifiers:
    public: The class is accessible by any other class.
    private: The code is only accessible within the declared class.
    protected: The code is accessible in the same package and subclasses. You will learn more about subclasses and superclasses in the Inheritance chapter.

    static:
    static block: the program that is going to be excecuted before the main function.
    static classes: inner class being created that does not need to create its outer class.
    static methods: method that belongs to the class and could be called without creating an instance.
    static variable: all the instances will share the same value of the variable.

    final:
    final classes: the class cannot be extended.
    final method: the method cannot be overrided.
    final variable: value cannot be changed/reference cannot be modified.

    abstract:
    abstract class: cannot be created and could contain abstract method.
    abstract method: method that does not have a body.

    synchronized:
    synchronized method: There can be only one thread for each object, that can execute inside a method. If there is more than one object, then only a single thread can execute inside the block for each object.
    synchronized block: A synchronized part of a non-synchronized method.

    native: Specifies that a method is not implemented in the same Java source file (but in another language).
    strictfp: Restrict the precision and rounding of floating point calculations.
    transient: The transient keyword in Java is used to avoid serialization. If any object of a data structure is defined as a transient , then it will not be serialized.
    volatile: The Java volatile keyword is intended to address variable visibility problems. By declaring the counter variable volatile all writes to the counter variable will be written back to main memory immediately. Also, all reads of the counter variable will be read directly from main memory.

    exception handling:
    try: The try statement allows you to define a block of code to be tested for errors while it is being executed.
    catch: The catch keyword catches exceptions generated by try statements.
    finally: finally defines a block of code we use along with the try keyword. It defines code that's always run after the try and any catch block, before the method is completed.
    throw vs throws: throw happended inside the class, throws happened when the class is going to throw the exception to its upper class.
    assert: An assert statement is used to declare an expected boolean condition in a program.

    class related:
    class: declare a new class.
    package: declare a new package.
    import: import dependecies from outside.
    extends: inheritance.(class to class or interface to interface)
    implements: implement a interface.
    interface: a class that only contains abstract method.

    object related:
    new: declare an instance of a class.
    instanceOf: check whether a class is a sub type of a given type.
    super: indicating the object of the parent class of the current class.
    this: indicating the current object.

    enum: enum is a special class that represents a group of constants. unchangeable.
    */
}
